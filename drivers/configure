#! /bin/sh
# configure script
# this file is part of FormCalc
# last modified 14 Feb 07 th
# note: has nothing to do with GNU autoconf


LC_ALL=C
export LC_ALL

test=test$$
trap "rm -f $test*" 0 1 2 15

if (echo "test\c"; echo 1,2,3) | grep c > /dev/null ; then
  if (echo -n test; echo 1,2,3) | grep n > /dev/null ; then
    echo_n=
    echo_c='
'
  else
    echo_n=-n
    echo_c=
  fi
else
  echo_n=
  echo_c='\c'
fi


findprog()
{
  echo $echo_n "looking for $1... $echo_c" 1>&2
  shift
  for prog in "$@" ; do
    full="`which \"$prog\" 2> /dev/null`"
    if [ -x "$full" ] ; then
      echo $full 1>&2
      echo $prog
      return 0
    fi
  done
  echo "no $@ in your path" 1>&2
  return 1
}


findlib()
{
  echo $echo_n "looking for $1... $echo_c" 1>&2
  file=$2
  shift 2
  for base in "$@" ; do
    for path in \
      "$base/lib" \
      "$base/$CONF_HOSTTYPE/lib" \
      "$base/build" \
      "$base/src"
    do
      if [ -f "$path/$file" ] ; then
        (cd "$path" ; pwd 1>&2 ; pwd)
        return 0
      fi
    done
  done
  echo "not found" 1>&2
  return 1
}


ldflags()
{
  # Mma 5.1's mcc needs this for static linking
  LDFLAGS="$LDFLAGS -lpthread"

  while read line ; do
    ld=0
    set -- `echo $line | tr ':,()' '    '`
    while [ $# -gt 0 ] ; do
      case $1 in
      */collect2 | */ld | ld)
        ld=1 ;;
      *.o)
        ;;
      -l* | -L* | *.a)
        [ $ld -eq 1 ] && LDFLAGS="$LDFLAGS $1" ;;
      *.ld)
        [ $ld -eq 1 ] && LDFLAGS="$LDFLAGS -Wl,$1" ;;
      /*)
        [ $ld -eq 1 ] && LDFLAGS="$LDFLAGS -L$1" ;;
      -rpath*)
        [ $ld -eq 1 ] && LDFLAGS="$LDFLAGS -Wl,$1,$2"
        shift ;;
      esac
      shift
    done
  done

  echo $LDFLAGS
}


# check the arguments

CONF_HOSTTYPE=`tcsh -cf 'echo $HOSTTYPE'`

CONF_MAKEARGS=""

for arg in "$@" ; do
  case "$arg" in
  --static)
	case $CONF_HOSTTYPE in
# Apple discourages static linking, see
# http://developer.apple.com/qa/qa2001/qa1118.html,
# so we make only libgcc static.  For a static libg2c do:
# sudo chmod 000 /usr/local/lib/libg2c.dylib
	*mac*) CONF_STATIC="-static-libgcc" ;;
	*)     CONF_STATIC="-static" ;;
	esac ;;
  --quad)
	CONF_QUAD=1 ;;
  --help)
	cat << _EOF_ 1>&2
$0 configures FormCalc-generated Fortran code, i.e. determines
or guesses the compiler and flags and writes out a makefile.

$0 understands the following options:

--prefix=DIR        use DIR as installation directory,

--static            link the executables statically,

--quad              compiles with quadruple precision (ifort and xlf only).

_EOF_
	exit 1 ;;
  -*)
	echo "Warning: $arg is not a valid option." 1>&2 ;;
  *=*)
	eval `echo $arg\" | sed 's/=/="/'` ;;
  *)
	CONF_MAKEARGS="$CONF_MAKEARGS $arg" ;;
  esac
done


## look for some programs

CONF_MAKE=`findprog make gmake Make make` || exit 1

CONF_CC=`findprog gcc $CC gcc` || exit 1

CONF_CFLAGS="${CFLAGS--O3 -fomit-frame-pointer -ffast-math -g} $CONF_STATIC"

CONF_FC=`findprog f77 $FC ${CONF_QUAD+ifort} pgf77 ifort xlf fort77 f77 f90 g77 g95 gfortran` || exit 1

CONF_DEF="-D"

if $CONF_FC --version -c 2>&1 | grep GNU > /dev/null ; then
  CONF_FFLAGS="-O0 -ffixed-line-length-none -g $CONF_STATIC"
else
  CONF_FFLAGS="${FFLAGS-default}"
  [ "$CONF_FFLAGS" = default ] && case "$CONF_FC$CONF_HOSTTYPE" in
  *pgf77*)
	CONF_FFLAGS="-fast -g -Mextend -g77libs -Ktrap=fp ${CONF_STATIC+-Bstatic}" ;;
  *ifort*)
	CONF_FFLAGS="-O3 -g -extend_source -warn truncated_source -assume bscc -fpe0 $CONF_STATIC ${CONF_QUAD+-r16 -DDBLE=QEXT -DDIMAG=QIMAG -DDCONJG=QCONJG -DDCMPLX=QCMPLX}" ;;
  *alpha)
	CONF_FFLAGS="-fast -g3 -extend_source -warn truncated_source -fpe0 $CONF_STATIC" ;;
  *sun* | *sparc*)
	CONF_FFLAGS="-fast -g -e -ftrap=common ${CONF_STATIC+-Bstatic}" ;;
  *hp*)
	CONF_FFLAGS="-O2 -g +es +U77 +FPVZO ${CONF_STATIC+-Wl,-noshared}" ;;
  *xlf*)
	CONF_FFLAGS="-O2 -g -qfixed=132 -qmaxmem=-1 -qextname -qflttrap=enable:invalid:overflow:zerodivide ${CONF_QUAD+-qautodbl=dbl}"
	CONF_DEF="-WF,-D" ;;
  *)
	CONF_FFLAGS="-O -g" ;;
  esac
fi


## find the Fortran libraries

echo $echo_n "extracting the Fortran libraries... $echo_c" 1>&2

rm -f $test*

cat > $test.f << _EOF_
	program dontpanic
	print *, "Hi"
	end
_EOF_

CONF_LDFLAGS=`$CONF_FC $CONF_FFLAGS -v -o $test $test.f 2>&1 | ldflags`

CONF_STDLIBS="$STDLIBS"
case $CONF_HOSTTYPE in
*mac*) CONF_STDLIBS="$CONF_STDLIBS -lSystemStubs" ;;
# this is supposed to fix the saveFP/restFP problem on Macs
# not needed on Tiger anymore
#  *mac*) CONF_LDFLAGS=`echo $CONF_LDFLAGS | sed 's/-lgcc /-lcc_dynamic /g'` ;;
esac

echo $CONF_LDFLAGS 1>&2


## does Fortran append underscores to symbols?

echo $echo_n "does $CONF_FC append underscores... $echo_c" 1>&2

rm -f $test*

cat > $test.f << _EOF_
	subroutine uscore
	end
_EOF_

$CONF_FC $CONF_FFLAGS -c $test.f > /dev/null 2>&1

if nm $test.o | grep uscore_ > /dev/null 2>&1 ; then
  echo "yes" 1>&2
  CONF_CFLAGS="$CONF_CFLAGS -DUNDERSCORE"
else
  echo "no" 1>&2
fi


# check for the necessary libraries

CONF_LT="`findlib LoopTools libooptools.a \
  $LT ../LoopTools ../../LoopTools ../../../LoopTools $HOME/LoopTools \
  /usr/local/LoopTools /usr/LoopTools /usr/local /usr`" || exit 1
CONF_STDLIBS="$CONF_STDLIBS -L\$(LT) -looptools${CONF_QUAD+-quad}"

CONF_FH="`findlib FeynHiggs libFH.a \
  $FH ../FeynHiggs* ../../FeynHiggs* ../../../FeynHiggs* $HOME/FeynHiggs* \
  /usr/local/FeynHiggs* /usr/FeynHiggs* /usr/local /usr`" && \
  CONF_STDLIBS="$CONF_STDLIBS -L$CONF_FH -lFH"

CONF_LHAPDF="`findlib LHAPDF libLHAPDF.a \
  $LHAPDF ../lhapdf* ../../lhapdf* ../../../lhapdf* $HOME/lhapdf* \
  /usr/local/lhapdf* /usr/lhapdf* /usr/local /usr`" && \
  CONF_STDLIBS="$CONF_STDLIBS -L$CONF_LHAPDF -Wl,-rpath,$CONF_LHAPDF -lLHAPDF"


echo "creating makefile" 1>&2

cat - `dirname $0`/makefile.in > makefile << _EOF_
# --- variables defined by configure ---

SRC = `dirname $0`

DEF = $CONF_DEF

LT = $CONF_LT
STDLIBS = $CONF_STDLIBS
LDFLAGS = $CONF_LDFLAGS

FC = $CONF_FC
FFLAGS = $CONF_FFLAGS

CC = $CONF_CC
CFLAGS = $CONF_CFLAGS

# --- end defs by configure ---


_EOF_

if [ -n "$CONF_MAKEARGS" ] ; then
  $CONF_MAKE $CONF_MAKEARGS
else
  echo "" 1>&2
  echo "now you must run $CONF_MAKE" 1>&2
  echo "" 1>&2
fi

exit 0

