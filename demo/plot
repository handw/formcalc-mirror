#!/bin/sh
# makes file.gpl which in turn makes file.eps from file
# use for num.F-generated files

# note: to avoid conflict with gnuplot-3.6, TeX metacharacters are
# replaced as & -> \ and ? -> $  [12aug97 th]

# options:
#   -born		use only cols 1:2 instead of 1:2,1:3
#   -o outname		write output to outname
#   -tot		use conventions for total cs plot
#   -diff		use conventions for diff cs plot
#   -lny		use log y scale regardless of diff mode

polarization()
{
  texpol=""
  mathmode=0
  for i in 1 2 3 4
  do
    poli=`expr substr $1 $i 1`
    case $poli in
    +) poli="{+}" ; mathmode=1 ;;
    -) poli="{-}" ; mathmode=1 ;;
    0) poli="L" ;;
    esac
    texpol="$texpol$poli"
  done
  if [ $mathmode = 1 ]
  then
    texpol="?&rm $texpol?"
  fi
  echo "$texpol"
}

unit()
{
  if [ $1 -ge 1000 ]
  then
    echo "`printf %g \`echo \"scale=3; $1/1000\" | bc\``~{&rm TeV}"
  else
    echo "$1~{&rm GeV}"
  fi
}

born=0
lny=""
plot=""
last=""
output=""
head=""
type=""

for opt in $*
do
  if [ "$output" = "..." ]
  then
    output=$opt
  else
    case $opt in
    -lny)  lny="set logscale y" ;;
    -born) born=1
           head="Born" ;;
    -tot)  type="tot" ;;
    -diff) type="diff" ;;
    -o)    output="..." ;;
    *eps)  ;;
    *gpl)  ;;
    *)     last=$opt
           plot=${plot:-$opt}
           ;;
    esac
  fi
done

if [ -z "$last" ]
then
  echo "usage: $0 file ... [-born] [-lny] [-tot] [-diff] [-o outputfile]"
  exit
fi

output=${output:-$plot.gpl}

bas=`basename $plot`
if [ -z "$type" ]
then
  case $bas in
  diff*) type="diff" ;;
  esac
fi

higgs=`expr $bas : '.*\.MH=\([0-9]*\)' + 0`
pol=`expr $bas : '.*\.pol=\([^.]*\)'`
newpol=`echo \`polarization $pol\``
energy=`expr $bas : '.*\.E=\([0-9]*\)' + 0`

if [ "$last" != "$plot" ]
then
  bas2=`basename $last`
  higgs2=`expr $bas2 : '.*\.MH=\([0-9]*\)' + 0`
  if [ $higgs -ne $higgs2 ]
  then
    higgs2="\\\`expr \$bas : '.*\.MH=\([0-9]*\)' + 0\\\`"
    higgs2="title=\"?&MH=\`unit $higgs2\`?\";"
  else
    head="$head${head:+, }?&MH=`unit $higgs`?"
    higgs2=""
  fi
  pol2=`expr $bas2 : '.*\.pol=\([^.]*\)'`
  if [ "$pol2" != "$pol" ]
  then
    pol2="pol2=\`expr \$bas : '.*\.pol=\([^.]*\)'\`;"
    pol3="title=\"\$title\${title:+, }\`polarization \$pol2\`\";"
  else
    head="$head${head:+, }$newpol"
    pol2=""
    pol3=""
  fi
  energy2=""
  case $bas in
  diff*)
    energy2=`expr $bas2 : '.*\.E=\([0-9]*\)' + 0`
    if [ $energy -ne $energy2 ]
    then
      energy2="\\\`expr \$bas : '.*\.E=\([0-9]*\)' + 0\\\`"
      energy2="title=\"\$title\${title:+, }?&sqrt s=\`unit $energy2\`?\";"
    else
      head="$head${head:+, }?&sqrt s=`unit $energy`?"
      energy2=""
    fi
    ;;
  esac
  eval "maketitle() { bas=\`basename \$1\` ; \
    ${higgs2:-title=\"\";} $pol2 $pol3 $energy2 echo \$title ; }"
else
  if [ $born = 1 ]
  then
    maketitle() { echo "Born"; }
  else
    maketitle() { echo ""; }
  fi
  head="?&MH=`unit $higgs`?, $newpol"
  case $plot in
  diff*)
    head="$head, ?&sqrt s=`unit $energy`?" ;;
  esac
fi

cat << _endofheader > $output
#!/bin/sh

gnuplot << _plotend
set term pslatex norotate
set output "v\$\$.plot"
set key
set title "$head" 0,-.5
set lmargin 11
set rmargin 15
_endofheader

thru=""
if [ "$type" = "diff" ]
then
  ymax=`max $plot`
  if [ $ymax -eq 0 -o -n "$lny" ]
  then
    theunit="{&rm pb}"
  else
    theunit="10^{$ymax&,{&rm pb}"
    thru=" thru s(x)"
  fi
  if [ -n "$lny" ]
  then
    format="%.1e"
  else
    format="%g"
  fi
  cat << _diffoptions >> $output
set size .8,1
$lny
set xtics ("{&small ?0^&circ?}" 0, "" pi/4, \\
  "{&small ?90^&circ?}" pi/2, "" 3*pi/4, "{&small ?180^&circ?}" pi)
set xrange [0:pi]
set xlabel "?&theta?" 21,1.5
set ylabel "{&small?&dfrac{&dsdO}{$theunit}?}" 0,9
set format y "{&small ?$format?}"
s(x)=x/(1e$ymax)
_diffoptions
else
  xmin=`expr $plot : '.*\.E=\([0-9]*\)' + 0`
  xmax=`expr $plot : '.*\.E=[0-9]*-\([0-9]*\)' + 0`
  cat << _totoptions >> $output
set size 1,1.3
set logscale xy
set xtics (200,500,1000,2000,5000,10000,20000,50000)
set xrange [$xmin:$xmax]
set xlabel "?&sqrt s/?GeV" 32,1.5
set ylabel "{&small ?&stot?}" 0,14
set format y "{&small ?%.1e?}"
_totoptions
fi

beg="plot"
delim=", \\"
bornline=4
loopline=1
ignorenext=0

for file in $*
do
  if [ $ignorenext = 1 ]
  then
    ignorenext=0
    continue
  fi
  case $file in
  -o) ignorenext=1 ;;
  -*) ;;
  *eps) ;;
  *gpl) ;;
  *)
    echo "> $file"
    if [ "$file" = "$last" ]
    then
      delim=""
    fi
    title=`maketitle $file`
    if [ $born = 1 ]
    then
      cat << _bornplt >> $output
$beg "$file"$thru u 1:2 \\
    t "{&small $title}" w l $loopline$delim
_bornplt
    else
      cat << _loopplt >> $output
$beg "$file"$thru u 1:2 \\
    t "{&small $title${title:+, }Born}" w l $bornline, \\
  ""$thru u 1:3 \\
    t "{&small full}" w l $loopline$delim
_loopplt
      bornline=`expr $bornline + 1`
    fi
    loopline=`expr $loopline + 1`
    beg=" "
  esac
done

cat << _bottom >> $output
_plotend

cat << _texstuff > v\$\$.tex
\\\\documentclass[11pt]{article}
\\\\oddsidemargin=0pt
\\\\evensidemargin=0pt
\\\\parindent=0pt
\\\\pagestyle{empty}
\\\\def\\\\dfrac#1#2{{\\\\displaystyle{#1\\\\over #2}}} 
\\\\def\\\\d{\\\\mathrm{d}}
\\\\def\\\\dsdO{\\\\d\\\\sigma/\\\\d\\\\Omega}
\\\\def\\\\stot{\\\\dfrac{\\\\sigma_{\\\\rm tot}}{\\\\rm pb}}
\\\\def\\\\MH{M_{\\\\rm H}}

\\\\begin{document}
_texstuff

sed \\
  -e 's/\[4 dl 3 dl 1 dl 3 dl\] 1 1 0/\[5 dl 2 dl 1 dl 2 dl 1 dl 2 dl\] 0 1 1/g' \\
  -e 's/e+0/e+/g' -e 's/e-0/e-/g' \\
  -e 's/1.0e+/10^{/g' -e 's/1.0e-/10^{-/g' \\
  -e 's/e+/\\\\\\times 10^{/g' -e 's/e-/\\\\\\times 10^{-/g' \\
  -e 's/10^{[-0-9]*/&}/g' \\
  -e 's/&/\\\\/g' -e 's/?/$/g' v\$\$.plot | ladj 40 >> v\$\$.tex

cat << _texstuff2 >> v\$\$.tex
\\\\end{document}
_texstuff2

epsfile="\`basename \$0 .gpl\`.eps"
latex v\$\$.tex
dvips -E -o \$epsfile v\$\$.dvi
rm -f v\$\$.plot v\$\$.tex v\$\$.aux v\$\$.log v\$\$.dvi
gv -magstep 3 \$epsfile &
_bottom

chmod a+x $output
exec $output
